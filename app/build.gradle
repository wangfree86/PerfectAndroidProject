apply plugin: 'com.android.application'
apply plugin: TestPlugin
apply plugin: TestPlugin2

// 普通的自定义 Task
task testBoth {
//    doFirst {
//        println '333This is executed first during the execution phase.' // doFirst 中的代码在执行阶段执行
//    }
//    doLast {
//        println '444This is executed last during the execution phase.' // doLast 中的代码在执行阶段执行
//    }
    println '555This is executed during the configuration phase as well.' // 非 doFirst 或者 doLast 中的代码，在配置阶段执行
}

//// 继承自 Copy 的 TasK
//task copyPublicApk(type: Copy) {
//    doFirst {
//        println("88-----------> copy the new pubic apk begin")
//    }
//    // from, into, rename 都继承自 Copy，所以即使直接写也是在执行阶段执行
//    from 'build/outputs/apk/app-debug.apk'
//    into file('src/privateApp/assets')
//    rename { String fileName ->
//        fileName = "Public.apk"
//    }
//    println '544455This is executed during the configuration phase as well.' //
//    doLast {
//        println("888888888-----------> copy the new pubic apk end")
//    }
//}
//task customTask() {
//    doLast {
//        println 'hello, this is a custom task'
//    }
//    println 'hello, this is a custom task'
//}
//afterEvaluate {
//    def aTask = tasks.getByName('assembleDebug')
//    println "aTask name is ${aTask.name}"
//    aTask.dependsOn(customTask)
//}


android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "activity.ne.wk.com.perfectandroidproject"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // 吐司工具类：https://github.com/getActivity/ToastUtils
    implementation 'com.hjq:toast:8.0'
    // 标题栏：https://github.com/getActivity/TitleBar
    implementation 'com.hjq:titlebar:6.0'
    // 状态栏沉浸：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'

//    // ButterKnife 注解库：https://github.com/JakeWharton/butterknife
//    implementation 'com.jakewharton:butterknife:10.1.0'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

//    // EventBus 事件总线：https://github.com/greenrobot/EventBus
////    implementation "org.greenrobot:eventbus:3.1.1"
////    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.1.1'
//
    // 本地异常捕捉框架：https://github.com/Ereza/CustomActivityOnCrash
    implementation 'cat.ereza:customactivityoncrash:2.2.0'

    // 内存泄漏捕捉：https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}
